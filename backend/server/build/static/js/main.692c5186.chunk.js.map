{"version":3,"sources":["Group 3.svg","nature.jpg","trek.png","layout.svg","components/GoogleMap.js","components/Main.js","components/Contact.js","components/mapStyles.js","components/Thanks.js","components/packing.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","realTrailData","Main","useState","joined","setJoined","history","useHistory","Fragment","to","style","width","height","opacity","src","className","onSubmit","e","preventDefault","today","Date","date","getFullYear","getMonth","getDate","push","type","placeholder","onChange","target","value","Contact","title","setTitle","content","setContent","contactEmail","setContactEmail","sendEmail","a","email","console","log","onClick","goBack","htmlFor","name","featureType","elementType","stylers","color","lightness","visibility","weight","center","lat","lng","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","REACT_APP_TRAIL_API_KEY","then","res","json","data","MapWrapped","withScriptjs","withGoogleMap","selectedTrail","setSelectedTrail","useEffect","listener","key","window","addEventListener","removeEventListener","defaultZoom","defaultCenter","defaultOptions","styles","mapStyles","trails","map","trail","id","icon","url","imgMedium","scaledSize","google","maps","Size","onCloseClick","summary","difficulty","length","stars","GoogleMapComplete","googleMapURL","REACT_APP_GOOGLE_MAPS_API_KEY","loadingElement","containerElement","mapElement","Thanks","useParams","location","state","Packer","event","selected","min","max","Group_3","Routes","exact","path","component","App","_contact","setPath","pathname","listen","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.692c5186.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 3.40da0614.svg\";","module.exports = __webpack_public_path__ + \"static/media/nature.b3571d3c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trek.b699d890.png\";","module.exports = __webpack_public_path__ + \"static/media/layout.49d51588.svg\";","import React, { useState, useEffect } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\n//import * as trailData from \"./data/sample_trails.json\";\nimport mapStyles from \"./mapStyles\";\n\nlet center = { lat: 33.518589, lng: -86.810356 };\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(setCenter);\n}\nfunction setCenter(position) {\n  center = {\n    lat: position.coords.latitude,\n    lng: position.coords.longitude,\n  };\n}\n\nlet realTrailData;\n// get trail data\nfetch(\n  `https://www.hikingproject.com/data/get-trails?lat=${center.lat}&lon=${center.lng}&maxDistance=20&key=${process.env.REACT_APP_TRAIL_API_KEY}`\n)\n  .then((res) => res.json())\n  .then((data) => (realTrailData = data))\n  .then(() => console.log(realTrailData));\n\nfunction Map() {\n  const [selectedTrail, setSelectedTrail] = useState(null);\n\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.key === \"Escape\") {\n        setSelectedTrail(null);\n      }\n    };\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <GoogleMap\n      defaultZoom={10}\n      defaultCenter={center}\n      defaultOptions={{ styles: mapStyles }}\n    >\n      {realTrailData.trails.map((trail) => (\n        <Marker\n          key={trail.id}\n          position={{\n            lat: trail.latitude,\n            lng: trail.longitude,\n          }}\n          onClick={() => {\n            setSelectedTrail(trail);\n          }}\n          icon={{\n            url: trail.imgMedium,\n            scaledSize: new window.google.maps.Size(35, 35),\n          }}\n        />\n      ))}\n\n      {selectedTrail && (\n        <InfoWindow\n          onCloseClick={() => {\n            setSelectedTrail(null);\n          }}\n          position={{\n            lat: selectedTrail.latitude,\n            lng: selectedTrail.longitude,\n          }}\n        >\n          <div>\n            <h3>{selectedTrail.name}</h3>\n            <p>{selectedTrail.summary}</p>\n            <p>difficulty: {selectedTrail.difficulty}</p>\n            <p>length: {selectedTrail.length} miles</p>\n            <p>{selectedTrail.stars}/5</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\n\nexport default function GoogleMapComplete() {\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport layout from '../layout.svg';\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Main = () => {\n\n    const [joined, setJoined] = useState(\"\");\n    const history = useHistory();\n\n\n    const join = (e) =>{\n        e.preventDefault();\n        if(joined !== \"\"){\n            let today = new Date();\n            let date = today.getFullYear()+ '-' +(today.getMonth()+1) + '-' + today.getDate();\n            history.push(`/thanks/${joined}`, date );\n        }\n\n    }\n\n\n\n    return(\n        <React.Fragment>\n            <header>\n                \n                <div>\n                    <h1>We design &amp; create <br/> trekking trips.</h1>\n                    <p>Get away from the hustle and bustle of city life, explore what the nature has to offer. Trekking Team will let you know the destination, packing list. So jet off and explore nature! </p>\n                    <Link to=\"/contact\">Explore now</Link>\n                </div>\n                <img style={{ \n                    width: \"100%\",\n                    height: \"auto\",\n                    opacity: \"0.3\",}}\n                    src= \"https://cdn.dribbble.com/users/1355613/screenshots/6441984/landscape.jpg\" />\n                \n            </header>\n\n\n            <main>\n                <section className=\"services\">\n                     <h2>Why you should go on a trekking trip with Trekker?</h2>\n\n                     <div className=\"service-container\">\n                         <div className=\"services-card service-one\"></div>\n                         <div className=\"service-description\">\n\n                            <h3>Reconnect with nature</h3>\n                            <div>Trekker makes it easy to plan out your next outdoor adventure by giving you all the tools you need through a click of a button.</div>\n\n                         </div>\n                    </div>\n\n\n\n                    <div className=\"service-container\">\n                      \n                      <div className=\"services-card service-two\"></div>\n                      <div className=\"service-description\">\n                          <h3>Know what to pack</h3>\n                          <div>Trekker cuts the hassle and prepares your backpack for you. So you can never leave unprepared! \n</div>\n                      </div>\n                    </div>\n\n\n\n                    <div className=\"service-container\">\n                        <div className=\"services-card service-three\"></div>\n                        <div className=\"service-description\">\n                            <h3>Navigate Trails like a pro</h3>\n                            <div>Trekker lets you see local trails around you and can even view points of interests and rest stops. </div>\n                        </div>\n                      \n                    </div>\n                </section>\n\n                <section>\n                    <h2>Join our newsletter to get the latest trends.</h2>\n\n                    <form className=\"newsletter\" onSubmit={join}>\n                        <input type=\"email\" placeholder=\"Your email goes here\" onChange={(e) => setJoined(e.target.value)} />\n                        <input type=\"submit\"  value=\"Join Now!\"/>\n                    </form>\n\n                </section>\n            </main>\n\n\n        </React.Fragment>\n    )\n}\n\n\nexport default Main;","import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst Contact = () => {\n\n    const history = useHistory();\n    const goBack = () => {\n        history.goBack();\n    }\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [contactEmail, setContactEmail] = useState(\"\"); \n\n    const sendEmail = async(e) =>{\n        e.preventDefault();\n\n        let email = {\n            title,\n            content,\n            contactEmail\n        }\n\n        console.log(\"sending email\", email);\n    }\n\n\n    return(\n        <React.Fragment>\n           <button className=\"back\" onClick={goBack}> &larr; Go Back</button>\n\n            <form className=\"contact\" onSubmit={sendEmail}>\n                <h2>Sign up today and get ready for a once-in-a-lifetime adventure!</h2>\n                \n                <label htmlFor=\"title\">Message Title: </label>\n                <input type=\"text\" name=\"title\" onChange={(e) => setTitle(e.target.value)} />\n                \n                <label htmlFor=\"content\">Message Content: </label>\n                <textarea name=\"content\"  onChange={(e) => setContent(e.target.value)}  ></textarea>\n            \n                <label htmlFor=\"email\">Contact Email: </label>\n                <input type=\"email\" name=\"email\" onChange={(e) => setContactEmail(e.target.value)} />\n\n                <input type=\"submit\" value=\"Send Message\" />\n            </form>\n\n        </React.Fragment>\n    )\n\n}\n\n\nexport default Contact;","export default [\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#004358\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#009900\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#008000\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#003300\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#003300\",\n      },\n      {\n        lightness: -20,\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#003300\",\n      },\n      {\n        lightness: -17,\n      },\n    ],\n  },\n  {\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n      {\n        visibility: \"on\",\n      },\n      {\n        weight: 0.9,\n      },\n    ],\n  },\n  {\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#D3D3D3\",\n      },\n      {\n        lightness: -10,\n      },\n    ],\n  },\n  {},\n  {\n    featureType: \"administrative\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#D3D3D3\",\n      },\n      {\n        weight: 0.7,\n      },\n    ],\n  },\n];\n","import React, {useState} from 'react';\n\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst Thanks = () => {\n\n    const history = useHistory();\n    const { name } = useParams();\n\n    console.log(history);\n\n\n    return(\n        <React.Fragment>\n           <div className=\"thanks\">\n             <p>Thanks <strong>{name}!!</strong></p>\n             <p>You joined <strong>{history.location.state}</strong></p>\n           \n            <hr/>\n            <p><strong>Talk soon </strong></p>\n           \n           </div>\n        </React.Fragment>\n    )\n\n}\n\n\nexport default Thanks;","import React from 'react';\nimport Group_3 from '../Group 3.svg';\n\n\nexport default function Packer()\n{\n    \n    var isBackpacking = false;\n    function handleChange(event) \n    {\n        isBackpacking = !isBackpacking;\n    }\n    function handleSubmit(event) \n    {\n        // after POST the date in the html form\n    }\n    return (\n        <div className=\"contact\" >\n            <h1>Trekker Packer</h1>\n            <form onSubmit={handleSubmit}>\n\t\t\t    <h3>How are you trekking?</h3>\n                \n                <select>\n                <option selected value=\"backpacking\">Backpacking</option>\n                <option value=\"hiking\">Hiking</option>\n                </select>\n                \n\t\t\t    <h3>How much do you weigh in lb?</h3>\n                <input type=\"number\" />\n\t\t\t    <h3>How many days do you plan to hike?</h3>\n\t\t\t    <input type=\"number\" min = \"1\" max = \"5\" />\n                <button className = \"submit-btn\" type=\"submit\">Submit</button>\n            </form>\n            <img src={Group_3} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// components\nimport Main from './components/Main';\nimport Contact from './components/Contact';\nimport GoogleMapComplete from \"./components/GoogleMap\";\nimport Thanks from './components/Thanks';\nimport Packer from './components/packing';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route exact path=\"/contact\" component={Contact} />\n    <Route exact path=\"/map\" component={GoogleMapComplete} />\n    <Route exact path=\"/thanks/:name\" component={Thanks} />\n    <Route exact path = \"/packing\" component = {Packer}/>\n  </Switch>\n);\n\nexport default Routes;","import React, { useEffect, useState} from 'react';\nimport nature from './nature.jpg';\nimport trek from './trek.png';\n//import './App.css';\nimport Routes from \"./routes\";\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction App(){\n  const history = useHistory();\n  const [path, setPath] = useState(\"\");\n\n  window.addEventListener(\"load\", () => {\n\n    if(window.location.pathname === \"/contact\"){\n      setPath(window.location.pathname);\n    }\n  });\n\n  const checkPath = () => {\n    history.listen((location) => {\n      setPath(location.name);\n    });\n  }\n\n  useEffect(() => {\n    checkPath();\n  }, []);\n\n  const showContact = path;\n  let _contact;\n\n  if(showContact !== \"/contact\"){\n    _contact = (<li><Link to = '/contact'>Contact Me</Link></li>)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <nav>\n          <ul>\n            <li><Link to =\"/\">Trekker</Link></li>\n          </ul>\n          <ul>\n            {_contact}\n          </ul>\n        </nav>\n        <Routes />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}